# -*- coding: utf-8 -*-
"""Numerical Hm1-6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yi0gHXhBjMXReWSamwVsHzGoOJN_ZOzv
"""

import numpy as np
import matplotlib.pyplot as plt

# Define the function P(x)
def P(x):
    return (x - 1)**6

# Generate x values in the interval [0.995, 1.005]
x = np.linspace(0.995, 1.005, 1000)

# Calculate corresponding y values using the function P(x)
y = P(x)

# Create the plot
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='P(x) = (x - 1)^6', color='blue')
plt.xlabel('x')
plt.ylabel('P(x)')
plt.title('Plot of P(x) = (x - 1)^6')
plt.grid(True)
plt.legend()
plt.show()

import numpy as np
import matplotlib.pyplot as plt

# Define the function P(x)
def P(x):
    return x**6 - 6*x**5 + 15*x**4 - 20*x**3 + 15*x**2 - 6*x + 1

# Generate x values in the interval [0.995, 1.005]
x = np.linspace(0.995, 1.005, 1000)

# Calculate corresponding y values using the function P(x)
y = P(x)

# Create the plot
plt.figure(figsize=(8, 6))
plt.plot(x, y, label='P(x) = x^6 - 6x^5 + 15x^4 - 20x^3 + 15x^2 - 6x + 1', color='blue')
plt.xlabel('x')
plt.ylabel('P(x)')
plt.title('Plot of P(x) = x^6 - 6x^5 + 15x^4 - 20x^3 + 15x^2 - 6x + 1')
plt.grid(True)
plt.legend()
plt.show()

# the difference in results between
# ies in their mathematical expressions and behavior. While both are polynomial functions,
# the complexity and shape of their graphs can vary significantly, especially in specific intervals.